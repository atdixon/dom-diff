{"version":3,"file":null,"sources":["../src/util/accessor.js","../src/diff.js","../src/vdom/dom.js","../src/patch.js","../src/vdom/text.js","../src/vdom/element.js","../src/vdom/mount.js","../src/types.js","../src/compare/attributes.js","../src/util/weak-map.js","../src/util/event-map.js","../src/compare/events.js","../src/compare/element.js","../src/compare/text.js","../src/compare/node.js","../src/util/real-node-map.js","../src/util/real-node.js","../src/patch/append-child.js","../src/patch/remove-attribute.js","../src/patch/remove-child.js","../src/patch/replace-child.js","../src/patch/set-attribute.js","../src/patch/set-event.js","../src/patch/text-content.js","../src/merge.js","../src/render.js","../src/version.js"],"sourcesContent":["function classToString (obj) {\n  if (typeof obj === 'string') {\n    return obj;\n  }\n\n  if (Array.isArray(obj)) {\n    return obj.join(' ');\n  }\n\n  return Object.keys(obj).filter(function (key) {\n    return obj[key] ? key : false;\n  }).join(' ');\n}\n\nfunction styleToString (obj) {\n  if (typeof obj === 'string') {\n    return obj;\n  }\n\n  return Object.keys(obj).map(function (key) {\n    return `${key}: ${obj[key]};`;\n  }).join(' ');\n}\n\nexport function getAccessor (node, name) {\n  if (name === 'class') {\n    return node.className;\n  } else if (name === 'style') {\n    return node.style.cssText;\n  // most things\n  } else if (name !== 'type' && name in node) {\n    return node[name];\n  // real DOM elements\n  } else if (node.getAttribute) {\n    return node.getAttribute(name);\n  // vDOM nodes\n  } else if (node.attributes && node.attributes[name]) {\n    return node.attributes[name].value;\n  }\n}\n\nexport function mapAccessor (node, name, value) {\n  if (name === 'class') {\n    node.className = classToString(value);\n  } else if (name === 'style') {\n    node.style = { cssText: styleToString(value) };\n  }\n}\n\nexport function removeAccessor (node, name) {\n  if (name === 'class') {\n    node.className = '';\n  } else if (name === 'style') {\n    node.style.cssText = '';\n  // most things\n  } else if (name !== 'type' && name in node) {\n    node[name] = '';\n  // real DOM elements\n  } else if (node.removeAttribute) {\n    node.removeAttribute(name);\n  // vDOM nodes\n  } else if (node.attributes) {\n    delete node.attributes[name];\n  }\n}\n\nexport function setAccessor (node, name, value) {\n  if (name === 'class') {\n    node.className = value;\n  } else if (name === 'style') {\n    node.style.cssText = value;\n  // most things\n  } else if (name !== 'type' && name in node || typeof value !== 'string') {\n    // We check if it's undefined or null because IE throws \"invalid argument\"\n    // errors for some types of properties. Essentially this is the same as\n    // removing the accessor.\n    node[name] = value == null ? '' : value;\n  // real DOM elements\n  } else if (node.setAttribute) {\n    node.setAttribute(name, value);\n  // vDOM nodes\n  } else if (node.attributes) {\n    node.attributes[node.attributes.length] = node.attributes[name] = { name, value };\n  }\n}\n","import * as types from './types';\nimport compareNode from './compare/node';\nimport realNode from './util/real-node';\nimport realNodeMap from './util/real-node-map';\n\nconst { Node } = window;\n\nfunction diffNode (source, destination) {\n  let nodeInstructions = compareNode(source, destination);\n\n  // If there are instructions (even an empty array) it means the node can be\n  // diffed and doesn't have to be replaced. If the instructions are falsy\n  // it means that the nodes are not similar (cannot be changed) and must be\n  // replaced instead.\n  if (nodeInstructions) {\n    return nodeInstructions.concat(diff({ source, destination }));\n  }\n\n  return [{\n    destination,\n    source,\n    type: types.REPLACE_CHILD\n  }];\n}\n\nexport default function diff (opts = {}) {\n  const src = opts.source;\n  const dst = opts.destination;\n\n  if (!src || !dst) {\n    return [];\n  }\n\n  let instructions = opts.root ? diffNode(src, dst) : [];\n\n  const srcChs = src.childNodes;\n  const dstChs = dst.childNodes;\n  const srcChsLen = srcChs ? srcChs.length : 0;\n  const dstChsLen = dstChs ? dstChs.length : 0;\n\n  for (let a = 0; a < dstChsLen; a++) {\n    const curSrc = srcChs[a];\n    const curDst = dstChs[a];\n\n    // If there is no matching destination node it means we need to remove the\n    // current source node from the source.\n    if (!curSrc) {\n      instructions.push({\n        destination: dstChs[a],\n        source: src,\n        type: types.APPEND_CHILD\n      });\n      continue;\n    } else {\n      // Ensure the real node is carried over even if the destination isn't used.\n      // This is used in the render() function to keep track of the real node\n      // that corresponds to a virtual node if a virtual tree is being used.\n      if (!(curDst instanceof Node)) {\n        realNodeMap.set(curDst, realNode(curSrc));\n      }\n    }\n\n    instructions = instructions.concat(diffNode(curSrc, curDst));\n  }\n\n  if (dstChsLen < srcChsLen) {\n    for (let a = dstChsLen; a < srcChsLen; a++) {\n      instructions.push({\n        destination: srcChs[a],\n        source: src,\n        type: types.REMOVE_CHILD\n      });\n    }\n  }\n\n  return instructions;\n}\n","import { setAccessor } from '../util/accessor';\nimport eventMap from '../util/event-map';\nimport realNodeMap from '../util/real-node-map';\n\nconst { Node } = window;\n\nfunction createElement (el) {\n  const realNode = document.createElement(el.tagName);\n  const attributes = el.attributes;\n  const events = el.events;\n  const eventHandlers = eventMap(realNode);\n  const children = el.childNodes;\n\n  if (attributes) {\n    const attributesLen = attributes.length;\n    for (let a = 0; a < attributesLen; a++) {\n      const attr = attributes[a];\n      setAccessor(realNode, attr.name, attr.value);\n    }\n  }\n\n  if (events) {\n    for (let name in events) {\n      realNode.addEventListener(name, eventHandlers[name] = events[name]);\n    }\n  }\n\n  if (children) {\n    const docfrag = document.createDocumentFragment();\n    const childrenLen = children.length;\n\n    for (let a = 0; a < childrenLen; a++) {\n      const ch = children[a];\n      ch && docfrag.appendChild(render(ch));\n    }\n\n    if (realNode.appendChild) {\n      realNode.appendChild(docfrag);\n    }\n  }\n\n  return realNode;\n}\n\nfunction createText (el) {\n  return document.createTextNode(el.textContent);\n}\n\nexport default function render (el) {\n  if (el instanceof Node) {\n    return el;\n  }\n  if (Array.isArray(el)) {\n    const frag = document.createDocumentFragment();\n    el.forEach(item => frag.appendChild(render(item)));\n    return frag;\n  }\n  const realNode = el.tagName ? createElement(el) : createText(el);\n  realNodeMap.set(el, realNode);\n  return realNode;\n}\n","import * as types from './types';\nimport appendChild from './patch/append-child';\nimport removeAttribute from './patch/remove-attribute';\nimport removeChild from './patch/remove-child';\nimport replaceChild from './patch/replace-child';\nimport setAttribute from './patch/set-attribute';\nimport setEvent from './patch/set-event';\nimport textContent from './patch/text-content';\n\nconst patchers = {};\npatchers[types.APPEND_CHILD] = appendChild;\npatchers[types.REMOVE_ATTRIBUTE] = removeAttribute;\npatchers[types.REMOVE_CHILD] = removeChild;\npatchers[types.REPLACE_CHILD] = replaceChild;\npatchers[types.SET_ATTRIBUTE] = setAttribute;\npatchers[types.SET_EVENT] = setEvent;\npatchers[types.TEXT_CONTENT] = textContent;\n\nfunction patch (instruction) {\n  patchers[instruction.type](\n    instruction.source,\n    instruction.destination,\n    instruction.data\n  );\n}\n\nexport default function (instructions) {\n  instructions.forEach(patch);\n}\n","export default function createTextNode (item) {\n  return {\n    nodeType: 3,\n    textContent: item\n  };\n}\n","import { mapAccessor } from '../util/accessor';\nimport createTextNode from './text';\n\nfunction separateData (obj) {\n  const attrs = {};\n  const events = {};\n  const node = {};\n  let attrIdx = 0;\n\n  for (let name in obj) {\n    let value = obj[name];\n\n    if (name.indexOf('on') === 0) {\n      events[name.substring(2)] = value;\n    } else {\n      attrs[attrIdx++] = attrs[name] = { name, value };\n      mapAccessor(node, name, value);\n    }\n  }\n\n  attrs.length = attrIdx;\n  return { attrs, events, node };\n}\n\nfunction ensureNodes (arr) {\n  let out = [];\n  if (!Array.isArray(arr)) {\n    arr = [arr];\n  }\n  arr.filter(Boolean).forEach(function (item) {\n    if (Array.isArray(item)) {\n      out = out.concat(ensureNodes(item));\n    } else if (typeof item === 'object') {\n      out.push(translateFromReact(item));\n    } else {\n      out.push(createTextNode(item));\n    }\n  });\n  return out;\n}\n\nfunction ensureTagName (name) {\n  return (typeof name === 'function' ? name.id || name.name : name).toUpperCase();\n}\n\nfunction isChildren (arg) {\n  return arg && (typeof arg === 'string' || Array.isArray(arg) || typeof arg.nodeType === 'number' || isReactNode(arg));\n}\n\nfunction isReactNode (item) {\n  return item && item.type && item.props;\n}\n\nfunction translateFromReact (item) {\n  if (isReactNode(item)) {\n    const props = item.props;\n    const chren = ensureNodes(props.children);\n    delete props.children;\n    return {\n      nodeType: 1,\n      tagName: item.type,\n      attributes: props,\n      childNodes: chren\n    };\n  }\n  return item;\n}\n\nexport default function element (name, attrs = {}, ...chren) {\n  const isAttrsNode = isChildren(attrs);\n  const data = separateData(isAttrsNode ? {} : attrs);\n  const node = data.node;\n  node.nodeType = 1;\n  node.tagName = ensureTagName(name);\n  node.attributes = data.attrs;\n  node.events = data.events;\n  node.childNodes = ensureNodes(isAttrsNode ? [attrs].concat(chren) : chren);\n  return node;\n}\n\n// Add an array factory that returns an array of virtual nodes.\nelement.array = ensureNodes;\n\n// Generate built-in factories.\n[\n  'a',\n  'abbr',\n  'address',\n  'area',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'base',\n  'bdi',\n  'bdo',\n  'bgsound',\n  'blockquote',\n  'body',\n  'br',\n  'button',\n  'canvas',\n  'caption',\n  'cite',\n  'code',\n  'col',\n  'colgroup',\n  'command',\n  'content',\n  'data',\n  'datalist',\n  'dd',\n  'del',\n  'details',\n  'dfn',\n  'dialog',\n  'div',\n  'dl',\n  'dt',\n  'element',\n  'em',\n  'embed',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'font',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hgroup',\n  'hr',\n  'html',\n  'i',\n  'iframe',\n  'image',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  'keygen',\n  'label',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'map',\n  'mark',\n  'marquee',\n  'menu',\n  'menuitem',\n  'meta',\n  'meter',\n  'multicol',\n  'nav',\n  'nobr',\n  'noembed',\n  'noframes',\n  'noscript',\n  'object',\n  'ol',\n  'optgroup',\n  'option',\n  'output',\n  'p',\n  'param',\n  'picture',\n  'pre',\n  'progress',\n  'q',\n  'rp',\n  'rt',\n  'rtc',\n  'ruby',\n  's',\n  'samp',\n  'script',\n  'section',\n  'select',\n  'shadow',\n  'small',\n  'source',\n  'span',\n  'strong',\n  'style',\n  'sub',\n  'summary',\n  'sup',\n  'table',\n  'tbody',\n  'td',\n  'template',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'title',\n  'tr',\n  'track',\n  'u',\n  'ul',\n  'var',\n  'video',\n  'wbr'\n].forEach(function (tag) {\n  element[tag] = element.bind(null, tag);\n});\n","import dom from './dom';\n\nfunction removeChildNodes (elem) {\n  while (elem.firstChild) {\n    const first = elem.firstChild;\n    first.parentNode.removeChild(first);\n  }\n}\n\nexport default function (elem, tree) {\n  removeChildNodes(elem);\n  elem.appendChild(dom(tree));\n}\n","export const APPEND_CHILD = 1;\nexport const REMOVE_CHILD = 2;\nexport const REMOVE_ATTRIBUTE = 3;\nexport const REPLACE_CHILD = 4;\nexport const SET_ATTRIBUTE = 5;\nexport const SET_EVENT = 6;\nexport const SET_PROPERTY = 7;\nexport const TEXT_CONTENT = 8;\n","import * as types from '../types';\nimport { getAccessor } from '../util/accessor';\n\nexport default function (src, dst) {\n  let srcAttrs = src.attributes;\n  let dstAttrs = dst.attributes;\n  let srcAttrsLen = (srcAttrs || 0) && srcAttrs.length;\n  let dstAttrsLen = (dstAttrs || 0) && dstAttrs.length;\n  let instructions = [];\n\n  // Bail early if possible.\n  if (!srcAttrsLen && !dstAttrsLen) {\n    return instructions;\n  }\n\n  // Merge attributes that exist in source with destination's.\n  for (let a = 0; a < srcAttrsLen; a++) {\n    const srcAttr = srcAttrs[a];\n    const srcAttrName = srcAttr.name;\n    const srcAttrValue = getAccessor(src, srcAttrName);\n    const dstAttr = dstAttrs[srcAttrName];\n    const dstAttrValue = getAccessor(dst, srcAttrName);\n\n    if (!dstAttr) {\n      instructions.push({\n        data: { name: srcAttrName },\n        destination: dst,\n        source: src,\n        type: types.REMOVE_ATTRIBUTE\n      });\n    } else if (srcAttrValue !== dstAttrValue) {\n      instructions.push({\n        data: { name: srcAttrName, value: dstAttrValue },\n        destination: dst,\n        source: src,\n        type: types.SET_ATTRIBUTE\n      });\n    }\n  }\n\n  // We only need to worry about setting attributes that don't already exist\n  // in the source.\n  for (let a = 0; a < dstAttrsLen; a++) {\n    const dstAttr = dstAttrs[a];\n    const dstAttrName = dstAttr.name;\n    const dstAttrValue = getAccessor(dst, dstAttrName);\n    const srcAttr = srcAttrs[dstAttrName];\n\n    if (!srcAttr) {\n      instructions.push({\n        data: { name: dstAttrName, value: dstAttrValue },\n        destination: dst,\n        source: src,\n        type: types.SET_ATTRIBUTE\n      });\n    }\n  }\n\n  return instructions;\n}\n","// Because weak map polyfills either are too big or don't use native if\n// available properly.\n\nlet index = 0;\nconst prefix = '__WEAK_MAP_POLYFILL_';\n\nexport default (function () {\n  if (typeof WeakMap !== 'undefined') {\n    return WeakMap;\n  }\n\n  function Polyfill () {\n    this.key = prefix + index;\n    ++index;\n  }\n\n  Polyfill.prototype = {\n    get (obj) {\n      return obj[this.key];\n    },\n    set (obj, val) {\n      obj[this.key] = val;\n    }\n  };\n\n  return Polyfill;\n})();\n","import WeakMap from './weak-map';\n\nconst map = new WeakMap();\n\nexport default function (elem) {\n  let events = map.get(elem);\n  events || map.set(elem, events = {});\n  return events;\n}\n","import * as types from '../types';\nimport eventMap from '../util/event-map';\n\nexport default function (src, dst) {\n  const dstEvents = dst.events;\n  const srcEvents = eventMap(src);\n  const instructions = [];\n\n  // Remove any source events that aren't in the destination before seeing if\n  // we need to add any from the destination.\n  if (srcEvents) {\n    for (let name in srcEvents) {\n      if (dstEvents && dstEvents[name] !== srcEvents[name]) {\n        instructions.push({\n          data: { name, value: undefined },\n          destination: dst,\n          source: src,\n          type: types.SET_EVENT\n        });\n      }\n    }\n  }\n\n  // After instructing to remove any old events, we then can instruct to add\n  // new events. This prevents the new events from being removed from earlier\n  // instructions.\n  if (dstEvents) {\n    for (let name in dstEvents) {\n      const value = dstEvents[name];\n      if (srcEvents[name] !== value) {\n        instructions.push({\n          data: { name, value },\n          destination: dst,\n          source: src,\n          type: types.SET_EVENT\n        });\n      }\n    }\n  }\n\n  return instructions;\n}\n","import compareAttributes from './attributes';\nimport compareEvents from './events';\n\nexport default function (src, dst) {\n  if (src.tagName === dst.tagName) {\n    return compareAttributes(src, dst).concat(compareEvents(src, dst));\n  }\n}\n","import * as types from '../types';\n\nexport default function (src, dst) {\n  if (src.textContent === dst.textContent) {\n    return [];\n  }\n\n  return [{\n    destination: dst,\n    source: src,\n    type: types.TEXT_CONTENT\n  }];\n}\n","import compareElement from './element';\nimport compareText from './text';\nimport compareComment from './comment';\n\nconst NODE_COMMENT = 8;\nconst NODE_ELEMENT = 1;\nconst NODE_TEXT = 3;\n\nexport default function (src, dst) {\n  let dstType, srcType;\n\n  if (!dst || !src) {\n    return;\n  }\n\n  dstType = dst.nodeType;\n  srcType = src.nodeType;\n\n  if (dstType !== srcType) {\n    return;\n  } else if (dstType === NODE_ELEMENT) {\n    return compareElement(src, dst);\n  } else if (dstType === NODE_TEXT) {\n    return compareText(src, dst);\n  } else if (dstType === NODE_COMMENT) {\n    return compareComment(src, dst);\n  }\n}\n","import WeakMap from './weak-map';\nexport default new WeakMap();\n","import realNodeMap from './real-node-map';\n\nconst { Node } = window;\n\nexport default function (node) {\n  return node instanceof Node ? node : realNodeMap.get(node);\n}\n","import realNode from '../util/real-node';\nimport dom from '../vdom/dom';\n\nexport default function (src, dst) {\n  realNode(src).appendChild(dom(dst));\n}\n","import { removeAccessor } from '../util/accessor';\nimport realNode from '../util/real-node';\n\nexport default function (src, dst, data) {\n  removeAccessor(realNode(src), data.name);\n}\n","import realNode from '../util/real-node';\n\nexport default function (src, dst) {\n  const realDst = realNode(dst);\n  const realSrc = realNode(src);\n\n  // We don't do parentNode.removeChild because parentNode may report\n  // incorrectly in some prollyfills since it's impossible (?) to spoof.\n  realSrc.removeChild(realDst);\n}\n","import dom from '../vdom/dom';\nimport realNode from '../util/real-node';\n\nexport default function (src, dst) {\n  const realSrc = realNode(src);\n  realSrc && realSrc.parentNode && realSrc.parentNode.replaceChild(dom(dst), realSrc);\n}\n","import { setAccessor } from '../util/accessor';\nimport realNode from '../util/real-node';\n\nexport default function (src, dst, data) {\n  setAccessor(realNode(src), data.name, data.value);\n}\n","import eventMap from '../util/event-map';\nimport realNode from '../util/real-node';\n\nexport default function (src, dst, data) {\n  const realSrc = realNode(src);\n  const eventHandlers = eventMap(realSrc);\n  const name = data.name;\n  const prevHandler = eventHandlers[name];\n  const nextHandler = data.value;\n\n  if (typeof prevHandler === 'function') {\n    delete eventHandlers[name];\n    realSrc.removeEventListener(name, prevHandler);\n  }\n\n  if (typeof nextHandler === 'function') {\n    eventHandlers[name] = nextHandler;\n    realSrc.addEventListener(name, nextHandler);\n  }\n}\n","import realNode from '../util/real-node';\n\nexport default function (src, dst) {\n  realNode(src).textContent = dst.textContent;\n}\n","import diff from './diff';\nimport patch from './patch';\n\nexport default function (opts) {\n  var inst = diff(opts);\n  patch(inst);\n  return inst;\n}\n","import WeakMap from './util/weak-map';\nimport createElement from './vdom/element';\nimport merge from './merge';\nimport mount from './vdom/mount';\n\nconst { Node } = window;\nconst oldTreeMap = new WeakMap();\n\nexport default function (render) {\n  return function (elem) {\n    elem = elem instanceof Node ? elem : this;\n\n    if (!(elem instanceof Node)) {\n      throw new Error('No node provided to diff renderer as either the first argument or the context.');\n    }\n\n    // Create a new element to house the new tree since we diff / mount fragments.\n    const newTree = createElement('div', null, render(elem));\n    const oldTree = oldTreeMap.get(elem);\n\n    if (oldTree) {\n      merge({\n        destination: newTree,\n        source: oldTree\n      });\n    } else {\n      mount(elem, newTree.childNodes);\n    }\n\n    oldTreeMap.set(elem, newTree);\n  };\n}\n","export default '0.3.1';\n"],"names":["classToString","obj","Array","isArray","join","Object","keys","filter","key","styleToString","map","getAccessor","node","name","className","style","cssText","getAttribute","attributes","value","mapAccessor","removeAccessor","removeAttribute","setAccessor","setAttribute","length","diffNode","source","destination","nodeInstructions","compareNode","concat","diff","types","opts","src","dst","instructions","root","srcChs","childNodes","dstChs","srcChsLen","dstChsLen","a","curSrc","curDst","Node","set","realNode","push","createElement","el","document","tagName","events","eventHandlers","eventMap","children","attributesLen","attr","addEventListener","docfrag","createDocumentFragment","childrenLen","ch","appendChild","render","createText","createTextNode","textContent","frag","forEach","item","patch","instruction","type","data","separateData","attrs","attrIdx","indexOf","substring","ensureNodes","arr","out","Boolean","translateFromReact","ensureTagName","id","toUpperCase","isChildren","arg","nodeType","isReactNode","props","chren","element","isAttrsNode","removeChildNodes","elem","firstChild","first","parentNode","removeChild","APPEND_CHILD","REMOVE_CHILD","REMOVE_ATTRIBUTE","REPLACE_CHILD","SET_ATTRIBUTE","SET_EVENT","SET_PROPERTY","TEXT_CONTENT","srcAttrs","dstAttrs","srcAttrsLen","dstAttrsLen","srcAttr","srcAttrName","srcAttrValue","dstAttr","dstAttrValue","dstAttrName","index","prefix","Polyfill","WeakMap","prototype","this","val","get","dstEvents","srcEvents","undefined","compareAttributes","compareEvents","NODE_COMMENT","NODE_ELEMENT","NODE_TEXT","dstType","srcType","compareElement","compareText","compareComment","window","realNodeMap","dom","realDst","realSrc","replaceChild","prevHandler","nextHandler","removeEventListener","patchers","setEvent","inst","array","tag","bind","tree","oldTreeMap","Error","newTree","oldTree"],"mappings":"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BT,GAChCiI,GAASxH,GAAmByH,GAC5BD,GAASxH,GAAsBqC,EAU/B,QAAe,SAAUjC,KACVmC,QAAQE,OqBxBR,SAAUxC,MACnByH,GAAO3H,EAAKE,aACVyH,GACCA,EnB2ET1D,GAAQ2D,MAAQzE,GAId,IACA,OACA,UACA,OACA,UACA,QACA,QACA,IACA,OACA,MACA,MACA,UACA,aACA,OACA,KACA,SACA,SACA,UACA,OACA,OACA,MACA,WACA,UACA,UACA,OACA,WACA,KACA,MACA,UACA,MACA,SACA,MACA,KACA,KACA,UACA,KACA,QACA,WACA,aACA,SACA,OACA,SACA,OACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,SACA,SACA,KACA,OACA,IACA,SACA,QACA,MACA,QACA,MACA,MACA,SACA,QACA,SACA,KACA,OACA,OACA,MACA,OACA,UACA,OACA,WACA,OACA,QACA,WACA,MACA,OACA,UACA,WACA,WACA,SACA,KACA,WACA,SACA,SACA,IACA,QACA,UACA,MACA,WACA,IACA,KACA,KACA,MACA,OACA,IACA,OACA,SACA,UACA,SACA,SACA,QACA,SACA,OACA,SACA,QACA,MACA,UACA,MACA,QACA,QACA,KACA,WACA,WACA,QACA,KACA,QACA,OACA,QACA,KACA,QACA,IACA,KACA,MACA,QACA,OACAX,QAAQ,SAAUqF,KACVA,GAAO5D,EAAQ6D,KAAK,KAAMD,IC3MpC,QAAe,SAAUzD,EAAM2D,KACZ3D,KACZlC,YAAYgF,EAAIa,QmBNNf,OAATjG,MAAAA,KACFiH,GAAa,GAAIlC,MAER,SAAU3D,SAChB,UAAUiC,QACRA,YAAgBrD,IAAOqD,EAAO4B,OAE/B5B,YAAgBrD,UACd,IAAIkH,OAAM,qFAIZC,GAAU/G,EAAc,MAAO,KAAMgB,EAAOiC,IAC5C+D,EAAUH,GAAW9B,IAAI9B,EAE3B+D,mBAEaD,SACLC,OAGJ/D,EAAM8D,EAAQ1H,eAGXQ,IAAIoD,EAAM8D,6CC7BV"}