{"version":3,"sources":["index.min.js"],"names":["global","factory","exports","module","define","amd","skatejs","dom","diff","this","classToString","obj","Array","isArray","join","Object","keys","filter","key","styleToString","map","getAccessor","node","name","className","style","cssText","getAttribute","attributes","value","mapAccessor","removeAccessor","removeAttribute","setAccessor","setAttribute","length","compareAttributes","src","dst","srcAttrs","dstAttrs","srcAttrsLen","dstAttrsLen","instructions","a","srcAttr","srcAttrName","srcAttrValue","dstAttr","dstAttrValue","push","data","destination","source","type","SET_ATTRIBUTE","REMOVE_ATTRIBUTE","dstAttrName","eventMap","elem","events","get","set","compareEvents","dstEvents","srcEvents","undefined","SET_EVENT","compareElement","tagName","concat","text","textContent","TEXT_CONTENT","compareNode","dstType","srcType","nodeType","NODE_ELEMENT","NODE_TEXT","NODE_COMMENT","realNode","Node$2","realNodeMap","opts","arguments","srcChs","childNodes","dstChs","srcChsLen","dstChsLen","curSrc","curDst","Node","nodeInstructions","newOpts","REPLACE_CHILD","APPEND_CHILD","REMOVE_CHILD","createElement","el","document","eventHandlers","children","attributesLen","attr","addEventListener","docfrag","createDocumentFragment","childrenLen","ch","appendChild","render$1","createText","createTextNode","_ret","frag","forEach","item","v","babelHelpers","removeChild","realDst","realSrc","replaceChild","parentNode","setEvent","prevHandler","nextHandler","removeEventListener","patch","instruction","patchers","patch$1","merge","inst","separateData","attrs","attrIdx","indexOf","substring","ensureNodes","arr","out","Boolean","translateFromReact","ensureTagName","id","toUpperCase","isChildren","arg","isReactNode","props","chren","element","isAttrsNode","_len","_key","removeChildNodes","firstChild","first","mount","tree","render","Node$1","Error","newTree","oldTree","oldTreeMap","Symbol","iterator","constructor","SET_PROPERTY","types","freeze","index","prefix","WeakMap$1","Polyfill","WeakMap","prototype","val","_window$1","window","array","tag","bind","_window","vdom","version","main","previousGlobal","skatejsDomDiff","noConflict"],"mappings":"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","file":"index.min.js","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.skatejs-dom-diff = factory());\n}(this, function () {\n\n  var babelHelpers = {};\n  babelHelpers.typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n  };\n  babelHelpers;\n\n  var APPEND_CHILD = 1;\n  var REMOVE_CHILD = 2;\n  var REMOVE_ATTRIBUTE = 3;\n  var REPLACE_CHILD = 4;\n  var SET_ATTRIBUTE = 5;\n  var SET_EVENT = 6;\n  var SET_PROPERTY = 7;\n  var TEXT_CONTENT = 8;\n\nvar types = Object.freeze({\n  \tAPPEND_CHILD: APPEND_CHILD,\n  \tREMOVE_CHILD: REMOVE_CHILD,\n  \tREMOVE_ATTRIBUTE: REMOVE_ATTRIBUTE,\n  \tREPLACE_CHILD: REPLACE_CHILD,\n  \tSET_ATTRIBUTE: SET_ATTRIBUTE,\n  \tSET_EVENT: SET_EVENT,\n  \tSET_PROPERTY: SET_PROPERTY,\n  \tTEXT_CONTENT: TEXT_CONTENT\n  });\n\n  function classToString(obj) {\n    if (typeof obj === 'string') {\n      return obj;\n    }\n\n    if (Array.isArray(obj)) {\n      return obj.join(' ');\n    }\n\n    return Object.keys(obj).filter(function (key) {\n      return obj[key] ? key : false;\n    }).join(' ');\n  }\n\n  function styleToString(obj) {\n    if (typeof obj === 'string') {\n      return obj;\n    }\n\n    return Object.keys(obj).map(function (key) {\n      return key + ': ' + obj[key] + ';';\n    }).join(' ');\n  }\n\n  function getAccessor(node, name) {\n    if (name === 'class') {\n      return node.className;\n    } else if (name === 'style') {\n      return node.style.cssText;\n      // most things\n    } else if (name !== 'type' && name in node) {\n        return node[name];\n        // real DOM elements\n      } else if (node.getAttribute) {\n          return node.getAttribute(name);\n          // vDOM nodes\n        } else if (node.attributes && node.attributes[name]) {\n            return node.attributes[name].value;\n          }\n  }\n\n  function mapAccessor(node, name, value) {\n    if (name === 'class') {\n      node.className = classToString(value);\n    } else if (name === 'style') {\n      node.style = { cssText: styleToString(value) };\n    }\n  }\n\n  function removeAccessor(node, name) {\n    if (name === 'class') {\n      node.className = '';\n    } else if (name === 'style') {\n      node.style.cssText = '';\n      // most things\n    } else if (name !== 'type' && name in node) {\n        node[name] = '';\n        // real DOM elements\n      } else if (node.removeAttribute) {\n          node.removeAttribute(name);\n          // vDOM nodes\n        } else if (node.attributes) {\n            delete node.attributes[name];\n          }\n  }\n\n  function setAccessor(node, name, value) {\n    if (name === 'class') {\n      node.className = value;\n    } else if (name === 'style') {\n      node.style.cssText = value;\n      // most things\n    } else if (name !== 'type' && name in node || typeof value !== 'string') {\n        // We check if it's undefined or null because IE throws \"invalid argument\"\n        // errors for some types of properties. Essentially this is the same as\n        // removing the accessor.\n        node[name] = value == null ? '' : value;\n        // real DOM elements\n      } else if (node.setAttribute) {\n          node.setAttribute(name, value);\n          // vDOM nodes\n        } else if (node.attributes) {\n            node.attributes[node.attributes.length] = node.attributes[name] = { name: name, value: value };\n          }\n  }\n\n  function compareAttributes (src, dst) {\n    var srcAttrs = src.attributes;\n    var dstAttrs = dst.attributes;\n    var srcAttrsLen = (srcAttrs || 0) && srcAttrs.length;\n    var dstAttrsLen = (dstAttrs || 0) && dstAttrs.length;\n    var instructions = [];\n\n    // Bail early if possible.\n    if (!srcAttrsLen && !dstAttrsLen) {\n      return instructions;\n    }\n\n    // Merge attributes that exist in source with destination's.\n    for (var a = 0; a < srcAttrsLen; a++) {\n      var srcAttr = srcAttrs[a];\n      var srcAttrName = srcAttr.name;\n      var srcAttrValue = getAccessor(src, srcAttrName);\n      var dstAttr = dstAttrs[srcAttrName];\n      var dstAttrValue = getAccessor(dst, srcAttrName);\n\n      if (!dstAttr) {\n        instructions.push({\n          data: { name: srcAttrName },\n          destination: dst,\n          source: src,\n          type: REMOVE_ATTRIBUTE\n        });\n      } else if (srcAttrValue !== dstAttrValue) {\n        instructions.push({\n          data: { name: srcAttrName, value: dstAttrValue },\n          destination: dst,\n          source: src,\n          type: SET_ATTRIBUTE\n        });\n      }\n    }\n\n    // We only need to worry about setting attributes that don't already exist\n    // in the source.\n    for (var a = 0; a < dstAttrsLen; a++) {\n      var dstAttr = dstAttrs[a];\n      var dstAttrName = dstAttr.name;\n      var dstAttrValue = getAccessor(dst, dstAttrName);\n      var srcAttr = srcAttrs[dstAttrName];\n\n      if (!srcAttr) {\n        instructions.push({\n          data: { name: dstAttrName, value: dstAttrValue },\n          destination: dst,\n          source: src,\n          type: SET_ATTRIBUTE\n        });\n      }\n    }\n\n    return instructions;\n  }\n\n  // Because weak map polyfills either are too big or don't use native if\n  // available properly.\n\n  var index = 0;\n  var prefix = '__WEAK_MAP_POLYFILL_';\n\n  var WeakMap$1 = function () {\n    if (typeof WeakMap !== 'undefined') {\n      return WeakMap;\n    }\n\n    function Polyfill() {\n      this.key = prefix + index;\n      ++index;\n    }\n\n    Polyfill.prototype = {\n      get: function get(obj) {\n        return obj[this.key];\n      },\n      set: function set(obj, val) {\n        obj[this.key] = val;\n      }\n    };\n\n    return Polyfill;\n  }();\n\n  var map = new WeakMap$1();\n\n  function eventMap (elem) {\n    var events = map.get(elem);\n    events || map.set(elem, events = {});\n    return events;\n  }\n\n  function compareEvents (src, dst) {\n    var dstEvents = dst.events;\n    var srcEvents = eventMap(src);\n    var instructions = [];\n\n    // Remove any source events that aren't in the source before seeing if we\n    // need to add any from the destination.\n    if (srcEvents) {\n      for (var name in srcEvents) {\n        if (dstEvents[name] !== srcEvents[name]) {\n          instructions.push({\n            data: { name: name, value: undefined },\n            destination: dst,\n            source: src,\n            type: SET_EVENT\n          });\n        }\n      }\n    }\n\n    // After instructing to remove any old events, we then can instruct to add\n    // new events. This prevents the new events from being removed from earlier\n    // instructions.\n    if (dstEvents) {\n      for (var name in dstEvents) {\n        var value = dstEvents[name];\n        if (srcEvents[name] !== value) {\n          instructions.push({\n            data: { name: name, value: value },\n            destination: dst,\n            source: src,\n            type: SET_EVENT\n          });\n        }\n      }\n    }\n\n    return instructions;\n  }\n\n  function compareElement (src, dst) {\n    if (src.tagName === dst.tagName) {\n      return compareAttributes(src, dst).concat(compareEvents(src, dst));\n    }\n  }\n\n  function text (src, dst) {\n    if (src.textContent === dst.textContent) {\n      return [];\n    }\n\n    return [{\n      destination: dst,\n      source: src,\n      type: TEXT_CONTENT\n    }];\n  }\n\n  var NODE_COMMENT = 8;\n  var NODE_ELEMENT = 1;\n  var NODE_TEXT = 3;\n\n  function compareNode (src, dst) {\n    var dstType = undefined,\n        srcType = undefined;\n\n    if (!dst || !src) {\n      return;\n    }\n\n    dstType = dst.nodeType;\n    srcType = src.nodeType;\n\n    if (dstType !== srcType) {\n      return;\n    } else if (dstType === NODE_ELEMENT) {\n      return compareElement(src, dst);\n    } else if (dstType === NODE_TEXT) {\n      return text(src, dst);\n    } else if (dstType === NODE_COMMENT) {\n      return text(src, dst);\n    }\n  }\n\n  var realNodeMap = new WeakMap$1();\n\n  var _window$1 = window;\n  var Node$2 = _window$1.Node;\n\n  function realNode (node) {\n    return node instanceof Node$2 ? node : realNodeMap.get(node);\n  }\n\n  function diff() {\n    var opts = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n    var src = opts.source;\n    var dst = opts.destination;\n    var instructions = [];\n\n    if (!src || !dst) {\n      return [];\n    }\n\n    var srcChs = src.childNodes;\n    var dstChs = dst.childNodes;\n    var srcChsLen = srcChs ? srcChs.length : 0;\n    var dstChsLen = dstChs ? dstChs.length : 0;\n\n    for (var a = 0; a < dstChsLen; a++) {\n      var curSrc = srcChs[a];\n      var curDst = dstChs[a];\n\n      // If there is no matching destination node it means we need to remove the\n      // current source node from the source.\n      if (!curSrc) {\n        instructions.push({\n          destination: dstChs[a],\n          source: src,\n          type: APPEND_CHILD\n        });\n        continue;\n      } else {\n        // Ensure the real node is carried over even if the destination isn't used.\n        // This is used in the render() function to keep track of the real node\n        // that corresponds to a virtual node if a virtual tree is being used.\n        if (!(curDst instanceof Node)) {\n          realNodeMap.set(curDst, realNode(curSrc));\n        }\n      }\n\n      var nodeInstructions = compareNode(curSrc, curDst);\n\n      // If there are instructions (even an empty array) it means the node can be\n      // diffed and doesn't have to be replaced. If the instructions are falsy\n      // it means that the nodes are not similar (cannot be changed) and must be\n      // replaced instead.\n      if (nodeInstructions) {\n        var newOpts = opts;\n        newOpts.destination = curDst;\n        newOpts.source = curSrc;\n        instructions = instructions.concat(nodeInstructions, diff(newOpts));\n      } else {\n        instructions.push({\n          destination: curDst,\n          source: curSrc,\n          type: REPLACE_CHILD\n        });\n      }\n    }\n\n    if (dstChsLen < srcChsLen) {\n      for (var a = dstChsLen; a < srcChsLen; a++) {\n        instructions.push({\n          destination: srcChs[a],\n          source: src,\n          type: REMOVE_CHILD\n        });\n      }\n    }\n\n    return instructions;\n  }\n\n  function createElement(el) {\n    var realNode = document.createElement(el.tagName);\n    var attributes = el.attributes;\n    var events = el.events;\n    var eventHandlers = eventMap(realNode);\n    var children = el.childNodes;\n\n    if (attributes) {\n      var attributesLen = attributes.length;\n      for (var a = 0; a < attributesLen; a++) {\n        var attr = attributes[a];\n        setAccessor(realNode, attr.name, attr.value);\n      }\n    }\n\n    if (events) {\n      for (var name in events) {\n        realNode.addEventListener(name, eventHandlers[name] = events[name]);\n      }\n    }\n\n    if (children) {\n      var docfrag = document.createDocumentFragment();\n      var childrenLen = children.length;\n\n      for (var a = 0; a < childrenLen; a++) {\n        var ch = children[a];\n        ch && docfrag.appendChild(render$1(ch));\n      }\n\n      if (realNode.appendChild) {\n        realNode.appendChild(docfrag);\n      }\n    }\n\n    return realNode;\n  }\n\n  function createText(el) {\n    return document.createTextNode(el.textContent);\n  }\n\n  function render$1(el) {\n    if (el instanceof Node) {\n      return el;\n    }\n    if (Array.isArray(el)) {\n      var _ret = function () {\n        var frag = document.createDocumentFragment();\n        el.forEach(function (item) {\n          return frag.appendChild(render$1(item));\n        });\n        return {\n          v: frag\n        };\n      }();\n\n      if ((typeof _ret === 'undefined' ? 'undefined' : babelHelpers.typeof(_ret)) === \"object\") return _ret.v;\n    }\n    var realNode = el.tagName ? createElement(el) : createText(el);\n    realNodeMap.set(el, realNode);\n    return realNode;\n  }\n\n  function appendChild (src, dst) {\n    realNode(src).appendChild(render$1(dst));\n  }\n\n  function removeAttribute (src, dst, data) {\n    removeAccessor(realNode(src), data.name);\n  }\n\n  function removeChild (src, dst) {\n    var realDst = realNode(dst);\n    var realSrc = realNode(src);\n\n    // We don't do parentNode.removeChild because parentNode may report\n    // incorrectly in some prollyfills since it's impossible (?) to spoof.\n    realSrc.removeChild(realDst);\n  }\n\n  function replaceChild (src, dst) {\n    var realSrc = realNode(src);\n    realSrc && realSrc.parentNode && realSrc.parentNode.replaceChild(render$1(dst), realSrc);\n  }\n\n  function setAttribute (src, dst, data) {\n    setAccessor(realNode(src), data.name, data.value);\n  }\n\n  function setEvent (src, dst, data) {\n    var realSrc = realNode(src);\n    var eventHandlers = eventMap(realSrc);\n    var name = data.name;\n    var prevHandler = eventHandlers[name];\n    var nextHandler = data.value;\n\n    if (typeof prevHandler === 'function') {\n      delete eventHandlers[name];\n      realSrc.removeEventListener(name, prevHandler);\n    }\n\n    if (typeof nextHandler === 'function') {\n      eventHandlers[name] = nextHandler;\n      realSrc.addEventListener(name, nextHandler);\n    }\n  }\n\n  function textContent (src, dst) {\n    realNode(src).textContent = dst.textContent;\n  }\n\n  var patchers = {};\n  patchers[APPEND_CHILD] = appendChild;\n  patchers[REMOVE_ATTRIBUTE] = removeAttribute;\n  patchers[REMOVE_CHILD] = removeChild;\n  patchers[REPLACE_CHILD] = replaceChild;\n  patchers[SET_ATTRIBUTE] = setAttribute;\n  patchers[SET_EVENT] = setEvent;\n  patchers[TEXT_CONTENT] = textContent;\n\n  function patch(instruction) {\n    patchers[instruction.type](instruction.source, instruction.destination, instruction.data);\n  }\n\n  function patch$1 (instructions) {\n    instructions.forEach(patch);\n  }\n\n  function merge (opts) {\n    var inst = diff(opts);\n    patch$1(inst);\n    return inst;\n  }\n\n  function createTextNode(item) {\n    return {\n      nodeType: 3,\n      textContent: item\n    };\n  }\n\n  function separateData(obj) {\n    var attrs = {};\n    var events = {};\n    var node = {};\n    var attrIdx = 0;\n\n    for (var name in obj) {\n      var value = obj[name];\n\n      if (name.indexOf('on') === 0) {\n        events[name.substring(2)] = value;\n      } else {\n        attrs[attrIdx++] = attrs[name] = { name: name, value: value };\n        mapAccessor(node, name, value);\n      }\n    }\n\n    attrs.length = attrIdx;\n    return { attrs: attrs, events: events, node: node };\n  }\n\n  function ensureNodes(arr) {\n    var out = [];\n    if (!Array.isArray(arr)) {\n      arr = [arr];\n    }\n    arr.filter(Boolean).forEach(function (item) {\n      if (Array.isArray(item)) {\n        out = out.concat(ensureNodes(item));\n      } else if ((typeof item === 'undefined' ? 'undefined' : babelHelpers.typeof(item)) === 'object') {\n        out.push(translateFromReact(item));\n      } else {\n        out.push(createTextNode(item));\n      }\n    });\n    return out;\n  }\n\n  function ensureTagName(name) {\n    return (typeof name === 'function' ? name.id || name.name : name).toUpperCase();\n  }\n\n  function isChildren(arg) {\n    return arg && (typeof arg === 'string' || Array.isArray(arg) || typeof arg.nodeType === 'number' || isReactNode(arg));\n  }\n\n  function isReactNode(item) {\n    return item && item.type && item.props;\n  }\n\n  function translateFromReact(item) {\n    if (isReactNode(item)) {\n      var props = item.props;\n      var chren = ensureNodes(props.children);\n      delete props.children;\n      return {\n        nodeType: 1,\n        tagName: item.type,\n        attributes: props,\n        childNodes: chren\n      };\n    }\n    return item;\n  }\n\n  function element(name) {\n    var attrs = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    var isAttrsNode = isChildren(attrs);\n    var data = separateData(isAttrsNode ? {} : attrs);\n    var node = data.node;\n    node.nodeType = 1;\n    node.tagName = ensureTagName(name);\n    node.attributes = data.attrs;\n    node.events = data.events;\n\n    for (var _len = arguments.length, chren = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      chren[_key - 2] = arguments[_key];\n    }\n\n    node.childNodes = ensureNodes(isAttrsNode ? [attrs].concat(chren) : chren);\n    return node;\n  }\n\n  // Add an array factory that returns an array of virtual nodes.\n  element.array = ensureNodes;\n\n  // Generate built-in factories.\n  ['a', 'abbr', 'address', 'area', 'article', 'aside', 'audio', 'b', 'base', 'bdi', 'bdo', 'bgsound', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'cite', 'code', 'col', 'colgroup', 'command', 'content', 'data', 'datalist', 'dd', 'del', 'details', 'dfn', 'dialog', 'div', 'dl', 'dt', 'element', 'em', 'embed', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'iframe', 'image', 'img', 'input', 'ins', 'kbd', 'keygen', 'label', 'legend', 'li', 'link', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meta', 'meter', 'multicol', 'nav', 'nobr', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'optgroup', 'option', 'output', 'p', 'param', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'rtc', 'ruby', 's', 'samp', 'script', 'section', 'select', 'shadow', 'small', 'source', 'span', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'title', 'tr', 'track', 'u', 'ul', 'var', 'video', 'wbr'].forEach(function (tag) {\n    element[tag] = element.bind(null, tag);\n  });\n\n  function removeChildNodes(elem) {\n    while (elem.firstChild) {\n      var first = elem.firstChild;\n      first.parentNode.removeChild(first);\n    }\n  }\n\n  function mount (elem, tree) {\n    removeChildNodes(elem);\n    elem.appendChild(render$1(tree));\n  }\n\n  var _window = window;\n  var Node$1 = _window.Node;\n\n  var oldTreeMap = new WeakMap$1();\n\n  function render (render) {\n    return function (elem) {\n      elem = elem instanceof Node$1 ? elem : this;\n\n      if (!elem instanceof Node$1) {\n        throw new Error('No node provided to diff renderer as either the first argument or the context.');\n      }\n\n      // Create a new element to house the new tree since we diff / mount fragments.\n      var newTree = element('div', null, render(elem));\n      var oldTree = oldTreeMap.get(elem);\n\n      if (oldTree) {\n        merge({\n          destination: newTree,\n          source: oldTree\n        });\n      } else {\n        mount(elem, newTree.childNodes);\n      }\n\n      oldTreeMap.set(elem, newTree);\n    };\n  }\n\n  var vdom = {\n    dom: render$1,\n    element: element,\n    mount: mount,\n    text: createTextNode\n  };\n\n  var version = '0.3.1';\n\n  var main = {\n    diff: diff,\n    merge: merge,\n    patch: patch$1,\n    render: render,\n    types: types,\n    vdom: vdom,\n    version: version\n  };\n\n  var previousGlobal = window.skatejsDomDiff;\n  main.noConflict = function noConflict() {\n    window.skatejsDomDiff = previousGlobal;\n    return this;\n  };\n  window.skatejsDomDiff = main;\n\n  return main;\n\n}));\n//# sourceMappingURL=index.js.map"],"sourceRoot":"/source/"}